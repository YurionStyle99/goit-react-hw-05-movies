{"version":3,"file":"static/js/392.07066a53.chunk.js","mappings":"+NACA,EAA4B,wBAA5B,EAA2D,mBAA3D,EAAsF,oB,kBC2CtF,EArCa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUN,GACPO,MAAK,SAACJ,GACLC,EAAQD,EACT,IACAK,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,EAAvB,GACV,GAAE,CAACT,IAECG,GAIH,gBAAKS,UAAWC,EAAhB,SACGV,EAAKW,KAAI,SAACC,GAAD,OACR,iBAAmBH,UAAWC,EAA9B,UACGE,EAAKC,cACJ,gBAAKC,IAAG,yCAAoCF,EAAKC,cAAgBE,IAAKH,EAAKA,QAC3E,uBAAG,kBAEL,eAAGH,UAAWC,EAAd,UAA2B,eAAaE,EAAKA,UAC5CA,EAAKI,YAAY,yBAAG,oBAAkBJ,EAAKI,cAC5C,yBAAG,eAAaJ,EAAKK,gBAPbL,EAAKf,GADP,OAJL,SAACqB,EAAA,QAAD,GAiBV,C,uFCrCD,EAAmC,gCAAnC,EAA4E,sBAA5E,EAAyG,oB,SCsBzG,EAnBe,WACb,OACE,gBAAKT,UAAWU,EAAhB,UACE,gBAAKV,UAAWU,EAAhB,UACA,SAAC,KAAD,CACNC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAkBP,EAClBQ,SAAS,OAKR,C,8LCpBKC,EAAqBC,EAAAA,EAAAA,OAAa,CACtCC,QAAS,iCAGJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAS,CACbC,QAAS,mCACTC,WAAY,QACZC,YAAa,OAJV,kBAQoBP,EAAmBQ,IAAI,sBAAuB,CAAEJ,OAAAA,IARpE,cAQGK,EARH,OASGC,EAAeD,EAASE,KAAKC,QAThC,kBAUIF,GAVJ,sCAYH/B,QAAQC,IAAR,MAZG,qFAgCA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kFACCV,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDa,GAAU,CAAEV,OAAAA,IANhF,cAMGK,EANH,OAOGM,EAAON,EAASE,KAPnB,kBAQII,GARJ,2HAaA,SAAexC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBuC,GAAzB,kFACCV,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDa,EAAhD,YAAkE,CAAEV,OAAAA,IANxF,cAMGK,EANH,OAOGrC,EAAOqC,EAASE,KAAKvC,KAPxB,kBAQIA,GARJ,2HAcA,SAAe4C,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,kFACCV,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDa,EAAhD,YAAkE,CAAEV,OAAAA,IANxF,cAMGK,EANH,OAOGQ,EAAUR,EAASE,KAAKC,QAP3B,kBAQIK,GARJ,2HAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCf,EAAS,CACbC,QAAS,mCACTe,MAAOD,GAHJ,kBAOoBlB,EAAAA,EAAAA,IAAU,4CAA6C,CAAEG,OAAAA,IAP7E,cAOGK,EAPH,OAQGY,EAASZ,EAASE,KAAKC,QAR1B,kBASIS,GATJ,2H","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Loader/style.module.css?07bf","components/Loader/Loader.jsx","components/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"cast_container__xBK1C\",\"card\":\"cast_card__HCfxp\",\"title\":\"cast_title__R2CBp\"};","import { fetchCast } from \"components/fetch\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport style from './cast.module.css'\nimport Loader from \"components/Loader/Loader\";\n\nconst Cast = () => {\n  const { id } = useParams();\n\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCast(id)\n      .then((cast) => {\n        setCast(cast);\n      })\n      .catch((error) => console.log(error));\n  }, [id]);\n\n  if (!cast) {\n    return <Loader/>;\n  }\n  return(\n    <div className={style.container}>\n      {cast.map((name) => (\n        <div key={name.id} className={style.card}>\n          {name.profile_path ?\n            <img src={`https://image.tmdb.org/t/p/w200${name.profile_path}`} alt={name.name} /> :\n            <b>Out of Photo</b>\n          }\n          <b className={style.title}>Aktor name: {name.name}</b>\n          {name.character ? <p> Charakter name: {name.character}</p> : false}\n          <p>Popularity: {name.popularity}</p>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nCast.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader_container\":\"style_loader_container__r7X6L\",\"loader\":\"style_loader__hD59r\",\"dots\":\"style_dots__vkOlV\"};","import React from \"react\";\nimport { ThreeDots } from \"react-loader-spinner\";\nimport styles from \"./style.module.css\";\n\nconst Loader = () => {\n  return (\n    <div className={styles.loader_container}>\n      <div className={styles.loader}>\n      <ThreeDots \nheight=\"200\" \nwidth=\"200\" \nradius=\"9\"\ncolor=\"#4fa94d\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName={styles.dots}\nvisible={true}\n />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;","import axios from 'axios';\nconst searchPopularFilms = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function fetchPopularFilms() {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    media_type: 'movie',\n    time_window: 'day',\n  };\n\n  try {\n    const response = await searchPopularFilms.get('/trending/movie/day', { params });\n    const popularFilms = response.data.results;\n    return popularFilms;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\n\nexport async function fetchBySearch(query) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    query: query,\n  };\n\n  try {\n    const response = await axios.get('https://api.themoviedb.org/3/search/movie', { params });\n    const searchResults = response.data.results;\n    return searchResults;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchById(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}`, { params });\n    const film = response.data;\n    return film;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchCast(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}/credits`, { params });\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReviews(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}/reviews`, { params });\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchMovies(value) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    query: value,\n  };\n\n  try {\n    const response = await axios.get('https://api.themoviedb.org/3/search/movie', { params });\n    const movies = response.data.results;\n    return movies;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["id","useParams","useState","cast","setCast","useEffect","fetchCast","then","catch","error","console","log","className","style","map","name","profile_path","src","alt","character","popularity","Loader","styles","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","searchPopularFilms","axios","baseURL","fetchPopularFilms","params","api_key","media_type","time_window","get","response","popularFilms","data","results","fetchById","filmId","film","fetchReviews","reviews","fetchMovies","value","query","movies"],"sourceRoot":""}