{"version":3,"file":"static/js/138.c6d42ce6.chunk.js","mappings":"8SACMA,EAAqBC,EAAAA,EAAAA,OAAa,CACtCC,QAAS,iCAGJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAS,CACbC,QAAS,mCACTC,WAAY,QACZC,YAAa,OAJV,kBAQoBP,EAAmBQ,IAAI,sBAAuB,CAAEJ,OAAAA,IARpE,cAQGK,EARH,OASGC,EAAeD,EAASE,KAAKC,QAThC,kBAUIF,GAVJ,sCAYHG,QAAQC,IAAR,MAZG,qFAgCA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kFACCZ,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDe,GAAU,CAAEZ,OAAAA,IANhF,cAMGK,EANH,OAOGQ,EAAOR,EAASE,KAPnB,kBAQIM,GARJ,2HAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,kFACCZ,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDe,EAAhD,YAAkE,CAAEZ,OAAAA,IANxF,cAMGK,EANH,OAOGU,EAAOV,EAASE,KAAKQ,KAPxB,kBAQIA,GARJ,2HAcA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,kFACCZ,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDe,EAAhD,YAAkE,CAAEZ,OAAAA,IANxF,cAMGK,EANH,OAOGY,EAAUZ,EAASE,KAAKC,QAP3B,kBAQIS,GARJ,2HAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCnB,EAAS,CACbC,QAAS,mCACTmB,MAAOD,GAHJ,kBAOoBtB,EAAAA,EAAAA,IAAU,4CAA6C,CAAEG,OAAAA,IAP7E,cAOGK,EAPH,OAQGgB,EAAShB,EAASE,KAAKC,QAR1B,kBASIa,GATJ,2H,sFChCP,UAxCqB,WACnB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,IAAUW,GACPM,MAAK,SAACH,GACLC,EAASD,EACV,IACAI,OAAM,SAACC,GAAD,OAAWrB,QAAQC,IAAIoB,EAAvB,GACV,GAAE,CAACR,IAECG,GAKH,4BACE,wBAAKA,EAAMM,SACX,yBAAG,eAAaN,EAAMO,iBACtB,yBAAG,WAASP,EAAMQ,OAAOC,KAAK,SAAAC,GAAG,gBAAMA,EAAIC,KAAV,YACjC,uBAAIX,EAAMY,YACV,gBAAKC,IAAG,yCAAoCb,EAAMc,aAAeC,IAAKf,EAAMM,SAC5E,wBAAI,4BACJ,2BACE,yBACA,SAAC,KAAD,CAAMU,GAAG,OAAT,SAAgB,YAEhB,yBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGrB,SAAC,KAAD,QAnBK,yBAAK,cAsBf,C","sources":["components/fetch.js","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst searchPopularFilms = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function fetchPopularFilms() {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    media_type: 'movie',\n    time_window: 'day',\n  };\n\n  try {\n    const response = await searchPopularFilms.get('/trending/movie/day', { params });\n    const popularFilms = response.data.results;\n    return popularFilms;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\n\nexport async function fetchBySearch(query) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    query: query,\n  };\n\n  try {\n    const response = await axios.get('https://api.themoviedb.org/3/search/movie', { params });\n    const searchResults = response.data.results;\n    return searchResults;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchById(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}`, { params });\n    const film = response.data;\n    return film;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchCast(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}/credits`, { params });\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReviews(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}/reviews`, { params });\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchMovies(value) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    query: value,\n  };\n\n  try {\n    const response = await axios.get('https://api.themoviedb.org/3/search/movie', { params });\n    const movies = response.data.results;\n    return movies;\n  } catch (error) {\n    throw error;\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchById } from '../../fetch';\nimport { Link, Outlet } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nconst MovieDetails = () => {\n  const { id } = useParams();\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchById(id)\n      .then((movie) => {\n        setMovie(movie);\n      })\n      .catch((error) => console.log(error));\n  }, [id]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>{movie.title}</h2>\n      <p>User score: {movie.vote_average}</p>\n      <p>Genres: {movie.genres.map((gen=>(`${gen.name} `)))}</p>\n      <p>{movie.overview}</p>\n      <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title} />\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n        <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n        <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\nMovieDetails.propTypes = {\n  children: PropTypes.node,\n};\nexport default MovieDetails;"],"names":["searchPopularFilms","axios","baseURL","fetchPopularFilms","params","api_key","media_type","time_window","get","response","popularFilms","data","results","console","log","fetchById","filmId","film","fetchCast","cast","fetchReviews","reviews","fetchMovies","value","query","movies","id","useParams","useState","movie","setMovie","useEffect","then","catch","error","title","vote_average","genres","map","gen","name","overview","src","poster_path","alt","to"],"sourceRoot":""}