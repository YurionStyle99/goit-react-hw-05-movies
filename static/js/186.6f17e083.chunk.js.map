{"version":3,"file":"static/js/186.6f17e083.chunk.js","mappings":"2MACA,EAAmC,gCAAnC,EAA4E,sBAA5E,EAAyG,oB,SCsBzG,EAnBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,UACA,SAAC,KAAD,CACNC,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAkBP,EAClBQ,SAAS,OAKR,C,uFCmBD,UAlCgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GACVO,MAAK,SAACJ,GACLC,EAAWD,EACZ,IACAK,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,EAAvB,GACV,GAAE,CAACT,IAECG,GAIH,yBACsB,IAAnBA,EAAQS,OACPT,EAAQU,KAAK,SAAAC,GAAM,OACjB,4BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFHF,EAAOd,GADA,KAMjB,uBAAG,sBAXF,SAAC,UAAD,GAcV,C,8LCjCKiB,EAAqBC,EAAAA,EAAAA,OAAa,CACtCC,QAAS,iCAGJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAS,CACbC,QAAS,mCACTC,WAAY,QACZC,YAAa,OAJV,kBAQoBP,EAAmBQ,IAAI,sBAAuB,CAAEJ,OAAAA,IARpE,cAQGK,EARH,OASGC,EAAeD,EAASE,KAAKC,QAThC,kBAUIF,GAVJ,sCAYHjB,QAAQC,IAAR,MAZG,qFAgCA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kFACCV,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDa,GAAU,CAAEV,OAAAA,IANhF,cAMGK,EANH,OAOGM,EAAON,EAASE,KAPnB,kBAQII,GARJ,2HAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,kFACCV,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDa,EAAhD,YAAkE,CAAEV,OAAAA,IANxF,cAMGK,EANH,OAOGQ,EAAOR,EAASE,KAAKM,KAPxB,kBAQIA,GARJ,2HAcA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAA4ByB,GAA5B,kFACCV,EAAS,CACbC,QAAS,oCAFN,kBAMoBJ,EAAAA,EAAAA,IAAA,6CAAgDa,EAAhD,YAAkE,CAAEV,OAAAA,IANxF,cAMGK,EANH,OAOGvB,EAAUuB,EAASE,KAAKC,QAP3B,kBAQI1B,GARJ,2HAaA,SAAegC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCf,EAAS,CACbC,QAAS,mCACTe,MAAOD,GAHJ,kBAOoBlB,EAAAA,EAAAA,IAAU,4CAA6C,CAAEG,OAAAA,IAP7E,cAOGK,EAPH,OAQGY,EAASZ,EAASE,KAAKC,QAR1B,kBASIS,GATJ,2H","sources":["webpack://react-homework-template/./src/components/Loader/style.module.css?07bf","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","components/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader_container\":\"style_loader_container__r7X6L\",\"loader\":\"style_loader__hD59r\",\"dots\":\"style_dots__vkOlV\"};","import React from \"react\";\nimport { ThreeDots } from \"react-loader-spinner\";\nimport styles from \"./style.module.css\";\n\nconst Loader = () => {\n  return (\n    <div className={styles.loader_container}>\n      <div className={styles.loader}>\n      <ThreeDots \nheight=\"200\" \nwidth=\"200\" \nradius=\"9\"\ncolor=\"#4fa94d\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName={styles.dots}\nvisible={true}\n />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;","import { fetchReviews } from \"components/fetch\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"components/Loader/Loader\";\nimport PropTypes from \"prop-types\";\n\nconst Reviews = () => {\n  const { id } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchReviews(id)\n      .then((reviews) => {\n        setReviews(reviews);\n      })\n      .catch((error) => console.log(error));\n  }, [id]);\n\n  if (!reviews) {\n    return <Loader/>;\n  }\n  return(\n    <div>\n      {reviews.length !== 0 ? \n        reviews.map((review => (\n          <div key={review.id}>\n            <b>{review.author}</b>\n            <p>{review.content}</p>\n          </div>\n        )))\n        : <p>Out of reviews</p>}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Reviews;","import axios from 'axios';\nconst searchPopularFilms = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function fetchPopularFilms() {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    media_type: 'movie',\n    time_window: 'day',\n  };\n\n  try {\n    const response = await searchPopularFilms.get('/trending/movie/day', { params });\n    const popularFilms = response.data.results;\n    return popularFilms;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\n\nexport async function fetchBySearch(query) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    query: query,\n  };\n\n  try {\n    const response = await axios.get('https://api.themoviedb.org/3/search/movie', { params });\n    const searchResults = response.data.results;\n    return searchResults;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function fetchById(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}`, { params });\n    const film = response.data;\n    return film;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchCast(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}/credits`, { params });\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReviews(filmId) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n  };\n\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${filmId}/reviews`, { params });\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchMovies(value) {\n  const params = {\n    api_key: '58645e23389326a2e8ed75695b9e1b79',\n    query: value,\n  };\n\n  try {\n    const response = await axios.get('https://api.themoviedb.org/3/search/movie', { params });\n    const movies = response.data.results;\n    return movies;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["className","styles","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","id","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","catch","error","console","log","length","map","review","author","content","searchPopularFilms","axios","baseURL","fetchPopularFilms","params","api_key","media_type","time_window","get","response","popularFilms","data","results","fetchById","filmId","film","fetchCast","cast","fetchMovies","value","query","movies"],"sourceRoot":""}